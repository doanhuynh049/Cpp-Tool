# bench.in -- IPC benchmark input file

#  column       meaning
#  ------       -------
#    1          number of messages
#    2          frequency of ACKS
#    3          number of grammar iterations
#    4          number of receiver processes
#    5          build each message on send (boolean; 0-false or 1-true)
#    6          traverse each message on receive (boolean; 0-false or 1-true)
#    7          number of server threads

# test speed of sending/receiving messages w/o building/traversing
 6000000    8    1   1  0  0  1
 4500000    8    4   1  0  0  1
 3000000    8   16   1  0  0  1
12000000   64    1   1  0  0  1
 9000000   64    4   1  0  0  1
 4500000   64   16   1  0  0  1
15000000  512    1   1  0  0  1
10000000  512    4   1  0  0  1
 5000000  512   16   1  0  0  1
15000000 4096    1   1  0  0  1
10000000 4096    4   1  0  0  1
 5000000 4096   16   1  0  0  1

# test again, but this time build/traverse messages
 6000000    8    1   1  1  1  1
 4500000    8    4   1  1  1  1
 3000000    8   16   1  1  1  1
10000000   64    1   1  1  1  1
 7500000   64    4   1  1  1  1
 4000000   64   16   1  1  1  1
12000000  512    1   1  1  1  1
 9000000  512    4   1  1  1  1
 4500000  512   16   1  1  1  1
15000000 4096    1   1  1  1  1
10000000 4096    4   1  1  1  1
 5000000 4096   16   1  1  1  1

# try again, but with two receivers
 4000000   8    1   2  1  1  1
 3000000    8    4   2  1  1  1
 1500000    8   16   2  1  1  1
 6000000   64    1   2  1  1  1
 4500000   64    4   2  1  1  1
 2000000   64   16   2  1  1  1
 7500000  512    1   2  1  1  1
 5000000  512    4   2  1  1  1
 2500000  512   16   2  1  1  1
 7500000 4096    1   2  1  1  1
 5000000 4096    4   2  1  1  1
 2500000 4096   16   2  1  1  1


# try again, but with four receivers
 3000000    4    1   4  1  1  1
 2000000    4    4   4  1  1  1
 1000000    4   16   4  1  1  1
 6000000   16    1   4  1  1  1
 3000000   16    4   4  1  1  1
 1500000   16   16   4  1  1  1
 6000000   64    1   4  1  1  1
 3000000   64    4   4  1  1  1
 1500000   64   16   4  1  1  1
 6000000  256    1   4  1  1  1
 3000000  256    4   4  1  1  1
 1500000  256   16   4  1  1  1


# stress things by increasing the number of receivers
 6400000  512    4   2  1  1  1
 3200000  512    4   4  1  1  1
 1600000  512    4   8  1  1  1
  800000  512    4  16  1  1  1
  400000  512    4  32  1  1  1


# stress things by increasing the size of the messages
51200000 8192    1   1  1  1  1
25600000 4096    2   1  1  1  1
12800000 2048    4   1  1  1  1
 6400000 1024    8   1  1  1  1
 3200000  512   16   1  1  1  1
 1600000  256   32   1  1  1  1
  800000  128   64   1  1  1  1
  400000   64  128   1  1  1  1
  200000   32  256   1  1  1  1
  100000   16  512   1  1  1  1
   50000    8 1024   1  1  1  1
   25000    4 2048   1  1  1  1
