/*
 * Copyright (c) 1991-2006 TIBCO Software Inc.
 * All rights reserved.
 * For more information, please contact:
 * TIBCO Software Inc., Palo Alto, California, USA
 *
 * $Id: //dev/packages/examples/ss/dev/68/src/c/burst/burstpr.h#1 $
 */

/* This file is generated by cproto - do not edit! */

/* burstpr.h -- generated prototypes */

#ifndef T_BURST_API
# ifndef T_OS_WIN32
# define T_BURST_API
# else
# ifndef T_STATIC_LINK
# ifndef T_BURST_SOURCE
# if !defined T_GENERATE_PROTOTYPES
# define T_BURST_API __declspec(dllimport)
# else
# define T_BURST_API
# endif
# else
# if !defined T_GENERATE_PROTOTYPES
# define T_BURST_API __declspec(dllexport)
# else
# define T_BURST_API
# endif
# endif
# else
# define T_BURST_API
# endif /* T_STATIC_LINK */
# endif /* T_OS_WIN32 */
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* burst.c */
T_BURST_API T_BOOL T_ENTRY T_EXPORT TipcBurstConnInit T_PROTO((
T_IPC_SRV srv,
T_BURST_FILTER_FUNC burst_filter_func,
T_PTR burst_filter_arg
));
T_BURST_API T_BOOL T_ENTRY T_EXPORT TipcBurstInit T_PROTO((
T_BURST_FILTER_FUNC burst_filter_func,
T_PTR burst_filter_arg
));
T_BURST_API T_IPC_BURST T_ENTRY T_EXPORT TipcBurstCreate T_PROTO((
T_INT4 auto_flush_count
));
T_BURST_API T_BOOL T_ENTRY T_EXPORT TipcBurstDestroy T_PROTO((
T_IPC_BURST burst
));
T_BURST_API T_BOOL T_ENTRY T_EXPORT TipcBurstGetAutoFlushCount T_PROTO((
T_IPC_BURST burst,
T_INT4 * auto_flush_count_return
));
T_BURST_API T_BOOL T_ENTRY T_EXPORT TipcBurstConnSetAutoFlushCount T_PROTO((
T_IPC_SRV srv,
T_IPC_BURST burst,
T_INT4 auto_flush_count
));
T_BURST_API T_BOOL T_ENTRY T_EXPORT TipcBurstSetAutoFlushCount T_PROTO((
T_IPC_BURST burst,
T_INT4 auto_flush_count
));
T_BURST_API T_IPC_MSG T_ENTRY T_EXPORT TipcBurstGetMsg T_PROTO((
T_IPC_BURST burst,
T_STR subject
));
T_BURST_API T_BOOL T_ENTRY T_EXPORT TipcBurstMsgTraverse T_PROTO((
T_IPC_MSG burst_msg,
T_BURST_MSG_TRAV_FUNC func,
T_PTR arg
));
T_BURST_API void T_ENTRY T_EXPORT TipcCbBurstConnProcessGmdFailure T_PROTO((
T_IPC_CONN conn,
T_IPC_CONN_PROCESS_CB_DATA data,
T_CB_ARG arg
));
T_BURST_API void T_ENTRY T_EXPORT TipcCbBurstProcessGmdFailure T_PROTO((
T_IPC_CONN conn,
T_IPC_CONN_PROCESS_CB_DATA data,
T_CB_ARG arg
));
T_BURST_API T_BOOL T_ENTRY T_EXPORT TipcBurstGetCount T_PROTO((
T_IPC_BURST burst,
T_STR subject_name,
T_INT4 * get_count_return
));
T_BURST_API T_BOOL T_ENTRY T_EXPORT TipcBurstConnFlush T_PROTO((
T_IPC_SRV srv,
T_IPC_BURST burst
));
T_BURST_API T_BOOL T_ENTRY T_EXPORT TipcBurstFlush T_PROTO((
T_IPC_BURST burst
));
T_BURST_API T_BOOL T_ENTRY T_EXPORT TipcBurstConnMsgSend T_PROTO((
T_IPC_SRV srv,
T_IPC_BURST burst,
T_IPC_MSG msg
));
T_BURST_API T_BOOL T_ENTRY T_EXPORT TipcBurstMsgSend T_PROTO((
T_IPC_BURST burst,
T_IPC_MSG msg
));

#ifdef __cplusplus
}
#endif
