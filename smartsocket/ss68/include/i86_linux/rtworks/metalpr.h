/*
 * Copyright (c) 1991-2006 TIBCO Software Inc.
 * All rights reserved.
 * For more information, please contact:
 * TIBCO Software Inc., Palo Alto, California, USA
 *
 * $Id: //dev/packages/tiof/biof/dev/68/src/rtworks/metalpr.h#1 $
 */

/* This file is generated by cproto - do not edit! */

/* ../rtworks/metalpr.h -- generated prototypes */

#ifndef T_METAL_API
# ifndef T_OS_WIN32
# define T_METAL_API
# else
# ifndef T_STATIC_LINK
# ifndef T_METAL_SOURCE
# if !defined T_GENERATE_PROTOTYPES
# define T_METAL_API __declspec(dllimport)
# else
# define T_METAL_API
# endif
# else
# if !defined T_GENERATE_PROTOTYPES
# define T_METAL_API __declspec(dllexport)
# else
# define T_METAL_API
# endif
# endif
# else
# define T_METAL_API
# endif /* T_STATIC_LINK */
# endif /* T_OS_WIN32 */
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* utmux.c */
T_METAL_API T_MUX T_ENTRY T_EXPORT TutMuxCreate T_PROTO((void));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutMuxDestroy T_PROTO((
T_MUX mux
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutMuxEventNotifyInternal T_PROTO((
T_MUX mux,
T_EVENT event
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutMuxTimerEventPostInternal T_PROTO((
T_MUX mux,
T_EVENT event
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutMuxLinkEventPostInternal T_PROTO((
T_MUX mux,
T_EVENT event
));
T_METAL_API T_EVENT T_ENTRY T_EXPORT TutMuxEventNext T_PROTO((
T_MUX mux,
T_BOOL wait_flag
));
T_METAL_API T_EVENT T_ENTRY T_EXPORT TutMuxEventLoop T_PROTO((
T_MUX mux
));
T_METAL_API T_CB T_ENTRY T_EXPORT TutMuxIdleCbCreate T_PROTO((
T_MUX mux,
T_MUX_IDLE_CB_FUNC func,
T_CB_ARG arg
));
T_METAL_API T_CB T_ENTRY T_EXPORT TutMuxIdleCbLookup T_PROTO((
T_MUX mux,
T_MUX_IDLE_CB_FUNC func,
T_CB_ARG arg
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutMuxGetUserProp T_PROTO((
T_MUX mux,
T_PTR * user_prop_return
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutMuxSetUserProp T_PROTO((
T_MUX mux,
T_PTR user_prop
));

/* utevent.c */
T_METAL_API T_EVENT T_ENTRY T_EXPORT TutEventAllocInternal T_PROTO((
T_EVENT_KIND kind
));
T_METAL_API T_EVENT T_ENTRY T_EXPORT TutEventCreate T_PROTO((void));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutEventDestroy T_PROTO((
T_EVENT event
));
T_METAL_API T_EVENT T_ENTRY T_EXPORT TutEventPost T_PROTO((
T_EVENT event,
T_MUX mux,
T_EVENT_FUNC dispatch_func,
T_PTR dispatch_arg
));
T_METAL_API T_EVENT T_ENTRY T_EXPORT TutEventRepost T_PROTO((
T_EVENT event
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutEventGetAcceptLink T_PROTO((
T_EVENT event,
T_LINK * accept_link_return
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutEventGetBuf T_PROTO((
T_EVENT event,
T_BUF * buf_return
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutEventGetBytesTransferred T_PROTO((
T_EVENT event,
T_INT4 * bytes_transferred_return
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutEventGetLink T_PROTO((
T_EVENT event,
T_LINK * link_return
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutEventGetLinkError T_PROTO((
T_EVENT event,
T_INT4 * link_error_return
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutEventGetSuccessful T_PROTO((
T_EVENT event,
T_BOOL * successful_return
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutEventGetTimer T_PROTO((
T_EVENT event,
T_TIMER * timer_return
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutEventGetUserProp T_PROTO((
T_EVENT event,
T_PTR * user_prop_return
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutEventSetUserProp T_PROTO((
T_EVENT event,
T_PTR user_prop
));
T_METAL_API T_EVENT T_ENTRY T_EXPORT TutEventCreateUnnamed T_PROTO((
T_BOOL initial_state
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutEventSet T_PROTO((
T_EVENT event
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutEventReset T_PROTO((
T_EVENT event
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutEventWait T_PROTO((
T_EVENT event,
T_INT4 timeout
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutEventDestroyUnnamed T_PROTO((
T_EVENT event
));

/* uttimer.c */
T_METAL_API T_TIMER T_ENTRY T_EXPORT TutTimerCreate T_PROTO((
T_REAL8 interval,
T_STR id
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutTimerDestroy T_PROTO((
T_TIMER timer
));
T_METAL_API T_EVENT T_ENTRY T_EXPORT TutTimerPost T_PROTO((
T_TIMER timer,
T_MUX mux,
T_EVENT_FUNC dispatch_func,
T_PTR dispatch_arg
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutTimerGetUserProp T_PROTO((
T_TIMER timer,
T_PTR * user_prop_return
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutTimerSetUserProp T_PROTO((
T_TIMER timer,
T_PTR user_prop
));

/* lnktcp.c */
T_METAL_API void T_ENTRY T_EXPORT TutLinkDriverTcpInit T_PROTO((void));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutLinkTcpParsePort T_PROTO((
T_STR address,
T_INT4 * port_num_return
));

/* utlink.c */
T_METAL_API T_LINK T_ENTRY T_EXPORT TutLinkCreateServer T_PROTO((
T_STR protocol,
T_STR node,
T_STR address
));
T_METAL_API T_LINK T_ENTRY T_EXPORT TutLinkCreateClient T_PROTO((
T_STR protocol,
T_STR node,
T_STR address
));
T_METAL_API T_LINK T_ENTRY T_EXPORT TutLinkAcceptClient T_PROTO((
T_LINK server_link
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutLinkDestroy T_PROTO((
T_LINK link
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutLinkCheck T_PROTO((
T_LINK link,
T_IO_CHECK_MODE check_mode,
T_REAL8 timeout
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutLinkConnect T_PROTO((
T_LINK link,
T_REAL8 timeout
));
T_METAL_API T_INT4 T_ENTRY T_EXPORT TutLinkRecv T_PROTO((
T_LINK link,
T_PTR data,
T_INT4 size
));
T_METAL_API T_INT4 T_ENTRY T_EXPORT TutLinkSend T_PROTO((
T_LINK link,
T_PTR data,
T_INT4 size
));
T_METAL_API T_INT4 T_ENTRY T_EXPORT TutLinkRecvAll T_PROTO((
T_LINK link,
T_PTR data,
T_INT4 size
));
T_METAL_API T_INT4 T_ENTRY T_EXPORT TutLinkRecvTimeout T_PROTO((
T_LINK link,
T_PTR data,
T_INT4 size,
T_REAL8 timeout
));
T_METAL_API T_EVENT T_ENTRY T_EXPORT TutLinkPostAccept T_PROTO((
T_LINK link,
T_MUX mux,
T_EVENT_FUNC dispatch_func,
T_PTR dispatch_arg
));
T_METAL_API T_EVENT T_ENTRY T_EXPORT TutLinkPostConnect T_PROTO((
T_LINK link,
T_MUX mux,
T_EVENT_FUNC dispatch_func,
T_PTR dispatch_arg
));
T_METAL_API T_EVENT T_ENTRY T_EXPORT TutLinkPostRecv T_PROTO((
T_LINK link,
T_MUX mux,
T_BUF buf,
T_EVENT_FUNC dispatch_func,
T_PTR dispatch_arg
));
T_METAL_API T_EVENT T_ENTRY T_EXPORT TutLinkPostSend T_PROTO((
T_LINK link,
T_MUX mux,
T_BUF buf,
T_EVENT_FUNC dispatch_func,
T_PTR dispatch_arg
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutLinkPostUnsupported T_PROTO((
T_LINK link,
T_MUX mux,
T_EVENT event
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutLinkGetAddress T_PROTO((
T_LINK link,
T_STR * protocol_return,
T_STR * node_return,
T_STR * address_return
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutLinkGetBlockMode T_PROTO((
T_LINK link,
T_BOOL * block_mode_return
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutLinkSetBlockMode T_PROTO((
T_LINK link,
T_BOOL block_mode
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutLinkGetDevice T_PROTO((
T_LINK link,
T_PTR * device_return
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutLinkSetDevice T_PROTO((
T_LINK link,
T_PTR device
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutLinkGetDriver T_PROTO((
T_LINK link,
T_LINK_DRIVER * driver_return
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutLinkGetUserProp T_PROTO((
T_LINK link,
T_PTR * user_prop_return
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutLinkSetUserProp T_PROTO((
T_LINK link,
T_PTR user_prop
));
T_METAL_API T_LINK_DRIVER T_ENTRY T_EXPORT TutLinkDriverCreate T_PROTO((
T_STR name,
T_BOOL network_mode,
T_LINK_CREATE_SERVER_FUNC create_server_func,
T_LINK_CREATE_CLIENT_FUNC create_client_func,
T_LINK_ACCEPT_CLIENT_FUNC accept_client_func,
T_LINK_DESTROY_FUNC destroy_func,
T_LINK_CHECK_FUNC check_func,
T_LINK_CONNECT_FUNC connect_func,
T_LINK_RECV_FUNC recv_func,
T_LINK_SEND_FUNC send_func,
T_LINK_SET_BLOCK_MODE_FUNC set_block_mode_func,
T_LINK_POST_ACCEPT_FUNC post_accept_func,
T_LINK_POST_CONNECT_FUNC post_connect_func,
T_LINK_POST_RECV_FUNC post_recv_func,
T_LINK_POST_SEND_FUNC post_send_func
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutLinkDriverDestroy T_PROTO((
T_LINK_DRIVER driver
));
T_METAL_API T_LINK_DRIVER T_ENTRY T_EXPORT TutLinkDriverLookup T_PROTO((
T_STR name
));
T_METAL_API T_PTR T_ENTRY T_EXPORT TutLinkDriverTraverse T_PROTO((
T_LINK_DRIVER_TRAV_FUNC func,
T_PTR arg
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutLinkDriverGetName T_PROTO((
T_LINK_DRIVER driver,
T_STR * name_return
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutLinkDriverGetUserProp T_PROTO((
T_LINK_DRIVER driver,
T_PTR * user_prop_return
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutLinkDriverSetUserProp T_PROTO((
T_LINK_DRIVER driver,
T_PTR user_prop
));

/* lnklocal.c */
T_METAL_API void T_ENTRY T_EXPORT TutLinkDriverLocalInit T_PROTO((void));

/* lnksock.c */
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutLinkSocketCreateClient T_PROTO((
T_LINK client_link
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutLinkSocketAcceptClient T_PROTO((
T_LINK server_link,
T_LINK accept_link
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutLinkSocketDestroy T_PROTO((
T_LINK link
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutLinkSocketCheck T_PROTO((
T_LINK link,
T_IO_CHECK_MODE check_mode,
T_REAL8 timeout
));
T_METAL_API T_INT4 T_ENTRY T_EXPORT TutLinkSocketRecv T_PROTO((
T_LINK link,
T_PTR data,
T_INT4 size
));
T_METAL_API T_INT4 T_ENTRY T_EXPORT TutLinkSocketSend T_PROTO((
T_LINK link,
T_PTR data,
T_INT4 size
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutLinkSocketSetBlockMode T_PROTO((
T_LINK link,
T_BOOL block_mode
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutLinkSocketPostAccept T_PROTO((
T_LINK link,
T_MUX mux,
T_EVENT event
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutLinkSocketPostRecv T_PROTO((
T_LINK link,
T_MUX mux,
T_EVENT event
));
T_METAL_API T_BOOL T_ENTRY T_EXPORT TutLinkSocketPostSend T_PROTO((
T_LINK link,
T_MUX mux,
T_EVENT event
));

#ifdef __cplusplus
}
#endif
