/*
 * Copyright (c) 1991-2006 TIBCO Software Inc.
 * All rights reserved.
 * For more information, please contact:
 * TIBCO Software Inc., Palo Alto, California, USA
 *
 * $Id: //dev/packages/tre/dev/68/src/rtworks/smrpr.h#5 $
 */

/* This file is generated by cproto - do not edit! */

/* ../rtworks/smrpr.h -- generated prototypes */

#ifndef T_SMR_API
# ifndef T_OS_WIN32
# define T_SMR_API
# else
# ifndef T_STATIC_LINK
# ifndef T_SMR_SOURCE
# if !defined T_GENERATE_PROTOTYPES
# define T_SMR_API __declspec(dllimport)
# else
# define T_SMR_API
# endif
# else
# if !defined T_GENERATE_PROTOTYPES
# define T_SMR_API __declspec(dllexport)
# else
# define T_SMR_API
# endif
# endif
# else
# define T_SMR_API
# endif /* T_STATIC_LINK */
# endif /* T_OS_WIN32 */
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* smr.c */
T_SMR_API void T_ENTRY T_EXPORT TsmrTopologyExplorerTimerDf T_PROTO((
T_PTR obj,
T_EDM_DISPATCH_DATA data,
T_PTR arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrStop T_PROTO((
T_SMR smr
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TreInit T_PROTO((void));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TreInitThreads T_PROTO((void));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TreCreate T_PROTO((
T_STR name,
T_SRV_LM_XF lm_xf,
T_SRV_IOPM_XF * iopm_xf
));

/* smrlm.c */
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrLMCheck T_PROTO((
T_SMR smr
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrLMOpen T_PROTO((
T_SMR smr
));

/* smrexts.c */
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrLoadExtensions T_PROTO((
T_SMR smr
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrUnloadExtensions T_PROTO((
T_SMR smr
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrCreateInterface T_PROTO((
T_SMR_INTERFACE_ID id,
T_PTR * i_ptr,
T_PTR ptr
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrDestroyInterface T_PROTO((
T_SMR_INTERFACE_ID id,
T_PTR ptr
));

/* smriod.c */
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrIODCreate T_PROTO((
T_SMR smr,
T_SMR_IO_DIRECTOR * iod
));
T_SMR_API void T_ENTRY T_EXPORT TsmrIODAddref T_PROTO((
T_SMR_IO_DIRECTOR iod
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrIODSetIOCHMXf T_PROTO((
T_SMR_IO_DIRECTOR iod,
T_SMR_IOCHM_XF iochm_xf
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrIODSetUserProp T_PROTO((
T_SMR_IO_DIRECTOR iod,
T_PTR user_prop
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrIODGetIOCHMXf T_PROTO((
T_SMR_IO_DIRECTOR iod,
T_SMR_IOCHM_XF * iochm_xf
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrIODGetChannelInfo T_PROTO((
T_SMR_IO_DIRECTOR iod,
T_SRV_CHANNEL_INFO * chinfo
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrIODGetUserProp T_PROTO((
T_SMR_IO_DIRECTOR iod,
T_PTR * user_prop
));
T_SMR_API void T_ENTRY T_EXPORT TsmrIODRelease T_PROTO((
T_SMR_IO_DIRECTOR * iod
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrIODDestroy T_PROTO((
T_SMR_IO_DIRECTOR * iod
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrIODOnOpen T_PROTO((
T_SMR_IO_DIRECTOR iod,
T_SRV_CHANNEL_INFO chinfo,
T_SMR_IOCHM_XF iochm_xf,
T_SRV_IOP_XF iop_xf
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrIODOnMsgQRead T_PROTO((
T_SMR_IO_DIRECTOR iod,
T_SRV_IOP_XF iop_xf,
T_SIOC_MSG_IQ iq
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrIODOnIoctl T_PROTO((
T_SMR_IO_DIRECTOR iod,
T_SRV_IOP_XF iop_xf,
T_SIOC_IOCTL ioctl
));
T_SMR_API T_CSTR T_ENTRY T_EXPORT TsmrIODGetActivityStr T_PROTO((
T_SMR smr,
T_INT4 err_num
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrIODOnClose T_PROTO((
T_SMR_IO_DIRECTOR iod
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrIODMsgWrite T_PROTO((
T_SMR_IO_DIRECTOR iod,
T_MSG msg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrIODMsgQAppend T_PROTO((
T_SMR_IO_DIRECTOR iod,
T_SIOC_MSG_IQ iq,
T_MSG msg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrIODMsgQWrite T_PROTO((
T_SMR_IO_DIRECTOR iod
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrIODMsgQDetach T_PROTO((
T_SMR_IO_DIRECTOR iod,
T_SIOC_MSG_OQ * oq
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrIODIoctl T_PROTO((
T_SMR_IO_DIRECTOR iod,
T_SIOC_IOCTL ioctl
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrIODClose T_PROTO((
T_SMR_IO_DIRECTOR iod
));

/* smriodm.c */
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrIODMOnPortOpen T_PROTO((
T_SMR smr,
T_SRV_CHANNEL_INFO chinfo,
T_SRV_IOP_XF iop_xf
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrIODMOnMsgQRead T_PROTO((
T_SMR smr,
T_SRV_IOP_XF iop_xf,
T_SIOC_MSG_IQ iq
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrIODMOnIoctl T_PROTO((
T_SMR smr,
T_SRV_IOP_XF iop_xf,
T_SIOC_IOCTL ioctl
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrIODMOnPortClose T_PROTO((
T_SMR smr,
T_SRV_IOP_XF iop_xf
));

/* smradm.c */
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrSetOutboundRateParams T_PROTO((
T_SMR_IO_DIRECTOR iod,
T_INT4 token_rate,
T_INT4 max_tokens,
T_REAL8 burst_interval
));

/* smrchio.c */
T_SMR_API void T_ENTRY T_EXPORT TsmrClientMsgQIn T_PROTO((
T_SMR_CLIENT client,
T_SIOC_MSG_IQ iq
));
T_SMR_API void T_ENTRY T_EXPORT TsmrServerMsgQIn T_PROTO((
T_SMR_SERVER server,
T_SIOC_MSG_IQ iq
));
T_SMR_API void T_ENTRY T_EXPORT TsmrGroupMsgQIn T_PROTO((
T_SMR_GROUP group,
T_SIOC_MSG_IQ iq
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientMsgOut T_PROTO((
T_SMR_CLIENT client,
T_MSG msg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientMsgSend T_PROTO((
T_SMR_CLIENT client,
T_MSG msg,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerMsgOut T_PROTO((
T_SMR_SERVER server,
T_MSG msg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerMsgSend T_PROTO((
T_SMR_SERVER server,
T_MSG msg,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerMsgGroupSend T_PROTO((
T_SMR smr,
T_MSG msg,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrGroupMsgOut T_PROTO((
T_SMR_GROUP group,
T_MSG msg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrGroupMsgSend T_PROTO((
T_SMR_GROUP group,
T_MSG msg,
T_SMR_MSG_HANDLER_DATA data
));

/* smrmsg.c */
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMsgSetDestServerList T_PROTO((
T_MSG msg,
T_HASH_TABLE server_table
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMsgUnsetDestServerList T_PROTO((
T_MSG msg
));

/* smrgmd.c */
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientGmdAck T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerSrvGmdAck T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerGroupServerSubscribe T_PROTO((
T_SMR smr,
T_STR server_name,
T_STR project_name,
T_STR subject_name,
T_BOOL subscribe_status
));
T_SMR_API void T_ENTRY T_EXPORT TsmrServerSrvGmdInitDeleteResult T_PROTO((
T_SMR smr,
T_STR name,
T_STR subject_name,
T_INT4 error,
T_PTR_ARY server_list
));
T_SMR_API void T_ENTRY T_EXPORT TsmrServerSrvGmdInitAddResult T_PROTO((
T_SMR smr,
T_STR app_name,
T_STR subject_name,
T_STR client_name,
T_PTR_ARY server_list,
T_IPC_SRV_DISCONNECT_MODE disconnect_mode
));
T_SMR_API void T_ENTRY T_EXPORT TsmrServerSrvGmdClientSubjectSetSubscribe T_PROTO((
T_SMR smr,
T_STR app_name,
T_STR subject_name,
T_STR client_name,
T_INT2 disconnect_mode,
T_INT2 lb_status,
T_INT2 warm,
T_INT2 recv_status,
T_PTR_ARY server_list
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerSrvGmdClientStatus T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_CLIENT_MODE client_mode,
T_INT4 error,
T_PTR_ARY server_list
));
T_SMR_API void T_ENTRY T_EXPORT TsmrServerSrvGmdDeleteInit T_PROTO((
T_SMR smr,
T_SMR_SUBJECT subject
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerMsgStart T_PROTO((
T_SMR smr,
T_SMR_SERVER server,
T_MSG msg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerGroupMsgStart T_PROTO((
T_SMR smr,
T_MSG msg,
T_PTR_ARY server_list,
T_SMR_SERVER server_to_skip
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerClientMsgResend T_PROTO((
T_SMR_GMD_CLIENT gmd_client
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientMsgResend T_PROTO((
T_SMR_CLIENT client
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientRouteMsgGmd T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_SUBJECT subject,
T_SMR_SUBJECT_ROUTING subject_routing,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrGmdResendAll T_PROTO((
T_SMR smr,
T_STR func_name
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerSendAckDestroyGmdSrvInit T_PROTO((
T_SMR smr,
T_MSG msg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrCbClientGmdInit T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_MSG msg,
T_SMR_SUBJECT subject
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrGmdPublishSubjectUpdateTimeout T_PROTO((
T_SMR_SUBJECT subject,
T_REAL8 time
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientGmdSuspend T_PROTO((
T_SMR_CLIENT client,
T_SMR_SERVER server,
T_STR subject_name
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientGmdResume T_PROTO((
T_SMR_CLIENT client,
T_SMR_SERVER server,
T_STR subject_name
));

/* smrrtr.c */
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientRouteMsg T_PROTO((
T_SMR smr,
T_SMR_PROJECT app,
T_HASH_TABLE server_dest,
T_HASH_TABLE client_dest,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrServerClientRouteMsg T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerGroupMsgCheck T_PROTO((
T_SMR smr,
T_MSG msg,
T_SMR_SERVER direct_sender_server
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerRouteMsg T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientRouteMsg T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));

/* smrdback.c */
T_SMR_API T_SMR_SERVER_SEND_ACK T_ENTRY T_EXPORT TsmrServerSendAckCreate T_PROTO((
T_SMR smr,
T_MSG msg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerSendAckDataInsert T_PROTO((
T_SMR_SERVER_SEND_ACK send_ack,
T_PTR data
));
T_SMR_API T_PTR T_ENTRY T_EXPORT TsmrServerSendAckDataNext T_PROTO((
T_SMR_SERVER_SEND_ACK send_ack
));
T_SMR_API T_PTR T_ENTRY T_EXPORT TsmrServerSendAckDataRemove T_PROTO((
T_SMR_SERVER_SEND_ACK send_ack
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerSendAckDataReset T_PROTO((
T_SMR_SERVER_SEND_ACK send_ack
));
T_SMR_API T_SMR_SERVER_SEND_ACK T_ENTRY T_EXPORT TsmrServerSendAckLookup T_PROTO((
T_SMR smr,
T_MSG msg
));
T_SMR_API T_SMR_SERVER_SEND_ACK T_ENTRY T_EXPORT TsmrServerSendAckLookupBySeqNum T_PROTO((
T_SMR smr,
T_INT4 server_seq_num
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerSendAckDestroy T_PROTO((
T_SMR_SERVER_SEND_ACK send_ack
));
T_SMR_API T_SMR_SERVER_RECV_ACK T_ENTRY T_EXPORT TsmrServerRecvAckLookup T_PROTO((
T_SMR_SERVER server,
T_INT4 server_seq_num
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerRecvAckAdd T_PROTO((
T_SMR_SERVER server,
T_SMR_SERVER_SEND_ACK send_ack
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerRecvAckDestroy T_PROTO((
T_SMR_SERVER_RECV_ACK recv_ack
));
T_SMR_API T_SMR_CLIENT_SEND_ACK T_ENTRY T_EXPORT TsmrClientSendAckCreate T_PROTO((
T_MSG msg,
T_SMR_CLIENT client
));
T_SMR_API T_SMR_CLIENT_SEND_ACK T_ENTRY T_EXPORT TsmrClientSendAckLookupBySeqNum T_PROTO((
T_SMR_CLIENT client,
T_INT4 seq_num
));
T_SMR_API T_SMR_CLIENT_SEND_ACK T_ENTRY T_EXPORT TsmrClientSendAckLookup T_PROTO((
T_SMR_CLIENT client,
T_MSG msg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientSendAckPrint T_PROTO((
T_SMR_CLIENT_SEND_ACK send_ack,
T_OUT_FUNC out_func
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientSendAckDestroy T_PROTO((
T_SMR_CLIENT_SEND_ACK send_ack
));
T_SMR_API T_SMR_CLIENT_RECV_ACK T_ENTRY T_EXPORT TsmrClientRecvAckLookup T_PROTO((
T_SMR_CLIENT client,
T_STR dest,
T_INT4 seq_num
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientRecvAckAdd T_PROTO((
T_SMR_CLIENT client,
T_SMR_CLIENT_SEND_ACK send_ack
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientRecvAckDestroy T_PROTO((
T_SMR_CLIENT_RECV_ACK recv_ack,
T_BOOL delivery_status,
T_INT4 err_num
));
T_SMR_API T_SMR_CLIENT_SEND_ACK T_ENTRY T_EXPORT TsmrPublishClientSendAckCreate T_PROTO((
T_MSG msg,
T_SMR_PUBLISH_CLIENT publisher
));
T_SMR_API T_SMR_CLIENT_SEND_ACK T_ENTRY T_EXPORT TsmrPublishClientSendAckLookupBySeqNum T_PROTO((
T_SMR_PUBLISH_CLIENT publisher,
T_INT4 seq_num
));
T_SMR_API T_SMR_CLIENT_SEND_ACK T_ENTRY T_EXPORT TsmrPublishClientSendAckLookup T_PROTO((
T_SMR_PUBLISH_CLIENT publisher,
T_MSG msg
));
T_SMR_API T_SMR_CLIENT_RECV_ACK T_ENTRY T_EXPORT TsmrGmdClientRecvAckLookup T_PROTO((
T_SMR_GMD_CLIENT gmd_client,
T_STR dest,
T_INT4 seq_num
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrGmdClientRecvAckAdd T_PROTO((
T_SMR_GMD_CLIENT gmd_client,
T_SMR_CLIENT_SEND_ACK send_ack
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrGmdClientRecvAckDestroy T_PROTO((
T_SMR_CLIENT_RECV_ACK recv_ack,
T_BOOL delivery_status,
T_INT4 err_num
));

/* smrdbp.c */
T_SMR_API T_CB T_ENTRY T_EXPORT TsmrProjectCreateCbCreate T_PROTO((
T_SMR_PROJECT_CREATE_CB_FUNC func,
T_CB_ARG arg
));
T_SMR_API T_CB T_ENTRY T_EXPORT TsmrProjectCreateCbLookup T_PROTO((
T_SMR_PROJECT_CREATE_CB_FUNC func,
T_CB_ARG arg
));
T_SMR_API T_CB T_ENTRY T_EXPORT TsmrProjectDestroyCbCreate T_PROTO((
T_SMR_PROJECT app,
T_SMR_PROJECT_DESTROY_CB_FUNC func,
T_CB_ARG arg
));
T_SMR_API T_CB T_ENTRY T_EXPORT TsmrProjectDestroyCbLookup T_PROTO((
T_SMR_PROJECT app,
T_SMR_PROJECT_DESTROY_CB_FUNC func,
T_CB_ARG arg
));
T_SMR_API T_SMR_PROJECT T_ENTRY T_EXPORT TsmrProjectCreate T_PROTO((
T_SMR smr,
T_STR name
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrProjectDestroy T_PROTO((
T_SMR_PROJECT app
));
T_SMR_API T_SMR_PROJECT T_ENTRY T_EXPORT TsmrProjectLookup T_PROTO((
T_SMR smr,
T_STR name
));
T_SMR_API T_PTR T_ENTRY T_EXPORT TsmrProjectTraverse T_PROTO((
T_SMR smr,
T_SMR_PROJECT_TRAV_FUNC func,
T_PTR arg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrProjectGetName T_PROTO((
T_SMR_PROJECT app,
T_STR * name_return
));
T_SMR_API T_SMR_CLIENT T_ENTRY T_EXPORT TsmrProjectClientLookup T_PROTO((
T_SMR_PROJECT app,
T_STR name
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrProjectClientAdd T_PROTO((
T_SMR_PROJECT app,
T_SMR_CLIENT client
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrProjectClientRemove T_PROTO((
T_SMR_PROJECT app,
T_SMR_CLIENT client
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrProjectIncrMonRefCount T_PROTO((
T_SMR_PROJECT app
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrProjectDecrMonRefCount T_PROTO((
T_SMR_PROJECT app
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrProjectPrint T_PROTO((
T_SMR smr,
T_SMR_PROJECT app,
T_OUT_FUNC out_func
));

/* smrdbc.c */
T_SMR_API T_CB T_ENTRY T_EXPORT TsmrClientCreateCbCreate T_PROTO((
T_SMR_CLIENT_CREATE_CB_FUNC func,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrClientCreateCbCall T_PROTO((
T_SMR_CLIENT client
));
T_SMR_API T_CB T_ENTRY T_EXPORT TsmrClientCreateCbLookup T_PROTO((
T_SMR_CLIENT_CREATE_CB_FUNC func,
T_CB_ARG arg
));
T_SMR_API T_CB T_ENTRY T_EXPORT TsmrClientOpenCbCreate T_PROTO((
T_SMR_CLIENT_OPEN_CB_FUNC func,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrClientOpenCbCall T_PROTO((
T_SMR_CLIENT client
));
T_SMR_API T_CB T_ENTRY T_EXPORT TsmrClientOpenCbLookup T_PROTO((
T_SMR_CLIENT_OPEN_CB_FUNC func,
T_CB_ARG arg
));
T_SMR_API T_CB T_ENTRY T_EXPORT TsmrClientCloseCbCreate T_PROTO((
T_SMR_CLIENT client,
T_SMR_CLIENT_CLOSE_CB_FUNC func,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrClientCloseCbCall T_PROTO((
T_SMR_CLIENT client
));
T_SMR_API T_CB T_ENTRY T_EXPORT TsmrClientCloseCbLookup T_PROTO((
T_SMR_CLIENT client,
T_SMR_CLIENT_CLOSE_CB_FUNC func,
T_CB_ARG arg
));
T_SMR_API T_CB T_ENTRY T_EXPORT TsmrClientDestroyCbCreate T_PROTO((
T_SMR_CLIENT client,
T_SMR_CLIENT_DESTROY_CB_FUNC func,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrClientDestroyCbCall T_PROTO((
T_SMR_CLIENT client
));
T_SMR_API T_CB T_ENTRY T_EXPORT TsmrClientDestroyCbLookup T_PROTO((
T_SMR_CLIENT client,
T_SMR_CLIENT_DESTROY_CB_FUNC func,
T_CB_ARG arg
));
T_SMR_API T_CB T_ENTRY T_EXPORT TsmrClientSubscribeCbCreate T_PROTO((
T_SMR_PROJECT app,
T_SMR_CLIENT_SUBSCRIBE_CB_FUNC func,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrClientSubscribeCbCall T_PROTO((
T_SMR_CLIENT client,
T_SMR_SUBJECT dg,
T_BOOL recv_flag
));
T_SMR_API T_CB T_ENTRY T_EXPORT TsmrClientSubscribeCbLookup T_PROTO((
T_SMR_PROJECT app,
T_SMR_CLIENT_SUBSCRIBE_CB_FUNC func,
T_CB_ARG arg
));
T_SMR_API T_SMR_CLIENT T_ENTRY T_EXPORT TsmrClientCreate T_PROTO((
T_SMR smr,
T_SMR_CLIENT_PRIME prime
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientOpen T_PROTO((
T_SMR_CLIENT client,
T_SMR_CLIENT_PRIME prime
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientSetDisconnectMode T_PROTO((
T_SMR_CLIENT client,
T_IPC_SRV_DISCONNECT_MODE disconnect_mode
));
T_SMR_API T_SMR_MSG_DISPATCH_FUNC T_ENTRY T_EXPORT TsmrClientDispatchCreate T_PROTO((
T_SMR_CLIENT client,
T_INT4 mt_num,
T_SMR_MSG_DISPATCH_FUNC func
));
T_SMR_API T_SMR_MSG_FILTER_FUNC T_ENTRY T_EXPORT TsmrClientFilterCreate T_PROTO((
T_SMR_CLIENT client,
T_INT4 mt_num,
T_SMR_MSG_FILTER_FUNC func
));
T_SMR_API T_SMR_CLIENT T_ENTRY T_EXPORT TsmrClientLookup T_PROTO((
T_SMR smr,
T_SMR_PROJECT app,
T_STR name
));
T_SMR_API T_SMR_CLIENT T_ENTRY T_EXPORT TsmrDirectClientLookup T_PROTO((
T_SMR smr,
T_SMR_PROJECT app,
T_STR name
));
T_SMR_API T_SMR_CLIENT T_ENTRY T_EXPORT TsmrWarmClientLookup T_PROTO((
T_SMR smr,
T_SMR_PROJECT app,
T_STR name
));
T_SMR_API T_SMR_CLIENT T_ENTRY T_EXPORT TsmrDrainClientLookup T_PROTO((
T_SMR smr,
T_STR name
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientGetName T_PROTO((
T_SMR_CLIENT client,
T_STR * name_return
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientGetConn T_PROTO((
T_SMR_CLIENT client,
T_SMR_IO_DIRECTOR * iod_return
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientGetProject T_PROTO((
T_SMR_CLIENT client,
T_SMR_PROJECT * app_return
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientGetDisconnectMode T_PROTO((
T_SMR_CLIENT client,
T_IPC_SRV_DISCONNECT_MODE * disconnect_mode_return
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientGetIdent T_PROTO((
T_SMR_CLIENT client,
T_STR * ident_return
));
T_SMR_API T_INT4 T_ENTRY T_EXPORT TsmrClientGetClientDirectCount T_PROTO((
T_SMR smr
));
T_SMR_API T_PTR T_ENTRY T_EXPORT TsmrClientTraverse T_PROTO((
T_SMR smr,
T_SMR_CLIENT_TRAV_FUNC func,
T_PTR arg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientPrint T_PROTO((
T_SMR_CLIENT client,
T_OUT_FUNC out_func
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientClose T_PROTO((
T_SMR_CLIENT client
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientDestroy T_PROTO((
T_SMR_CLIENT client
));

/* smrdbgc.c */
T_SMR_API T_SMR_GMD_CLIENT T_ENTRY T_EXPORT TsmrGmdClientCreate T_PROTO((
T_SMR smr,
T_STR name,
T_IPC_SRV_DISCONNECT_MODE disconnect_mode,
T_SMR_PROJECT app,
T_SMR_SERVER server,
T_SMR_SUBJECT subject,
T_BOOL warm,
T_BOOL resend
));
T_SMR_API T_SMR_GMD_CLIENT T_ENTRY T_EXPORT TsmrGmdClientLookup T_PROTO((
T_SMR smr,
T_SMR_PROJECT app,
T_STR name
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrGmdClientPrint T_PROTO((
T_SMR smr,
T_SMR_GMD_CLIENT gmd_client,
T_OUT_FUNC out_func
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrGmdClientSubjectSetSubscribe T_PROTO((
T_SMR_GMD_CLIENT gmd_client,
T_SMR_SUBJECT subject,
T_BOOL lb_status,
T_BOOL recv_status
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrGmdClientStatusUpdate T_PROTO((
T_SMR_GMD_CLIENT gmd_client,
T_SMR_SUBJECT subject,
T_SMR_SERVER server,
T_SMR_CLIENT_MODE client_mode,
T_INT4 error,
T_BOOL resend
));
T_SMR_API void T_ENTRY T_EXPORT TsmrGmdClientServerDown T_PROTO((
T_SMR_GMD_CLIENT gmd_client
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrGmdClientDestroy T_PROTO((
T_SMR_GMD_CLIENT gmd_client,
T_INT4 error
));

/* smrdbpc.c */
T_SMR_API T_SMR_PUBLISH_CLIENT T_ENTRY T_EXPORT TsmrPublishClientCreate T_PROTO((
T_SMR smr,
T_STR name,
T_SMR_PROJECT app,
T_SMR_CLIENT client,
T_SMR_SERVER server
));
T_SMR_API T_SMR_PUBLISH_CLIENT T_ENTRY T_EXPORT TsmrPublishClientLookup T_PROTO((
T_SMR smr,
T_SMR_PROJECT app,
T_STR name
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrPublishClientPrint T_PROTO((
T_SMR smr,
T_SMR_PUBLISH_CLIENT publisher,
T_OUT_FUNC out_func
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrPublishClientSubjectUpdate T_PROTO((
T_SMR_PUBLISH_CLIENT publisher,
T_SMR_SUBJECT subject,
T_BOOL publish_status
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrPublishClientDestroy T_PROTO((
T_SMR_PUBLISH_CLIENT publisher
));

/* smrdbs.c */
T_SMR_API T_CB T_ENTRY T_EXPORT TsmrServerMaxClientLicensesCbCreate T_PROTO((
T_SMR_SERVER_MAX_CLIENT_LICENSES_CB_FUNC func,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrServerMaxClientLicensesCbCall T_PROTO((
T_SMR smr,
T_STR client_name,
T_INT4 allowed
));
T_SMR_API T_CB T_ENTRY T_EXPORT TsmrServerMaxClientLicensesCbLookup T_PROTO((
T_SMR_SERVER_MAX_CLIENT_LICENSES_CB_FUNC func,
T_CB_ARG arg
));
T_SMR_API T_CB T_ENTRY T_EXPORT TsmrServerCreateCbCreate T_PROTO((
T_SMR_SERVER_CREATE_CB_FUNC func,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrServerCreateCbCall T_PROTO((
T_SMR_SERVER server,
T_BOOL client_flag
));
T_SMR_API T_CB T_ENTRY T_EXPORT TsmrServerCreateCbLookup T_PROTO((
T_SMR_SERVER_CREATE_CB_FUNC func,
T_CB_ARG arg
));
T_SMR_API T_CB T_ENTRY T_EXPORT TsmrServerDestroyCbCreate T_PROTO((
T_SMR_SERVER server,
T_SMR_SERVER_DESTROY_CB_FUNC func,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrServerDestroyCbCall T_PROTO((
T_SMR_SERVER server
));
T_SMR_API T_CB T_ENTRY T_EXPORT TsmrServerDestroyCbLookup T_PROTO((
T_SMR_SERVER server,
T_SMR_SERVER_DESTROY_CB_FUNC func,
T_CB_ARG arg
));
T_SMR_API T_CB T_ENTRY T_EXPORT TsmrServerSubscribeCbCreate T_PROTO((
T_SMR smr,
T_SMR_SERVER server,
T_SMR_SERVER_SUBSCRIBE_CB_FUNC func,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrServerSubscribeCbCall T_PROTO((
T_SMR smr,
T_SMR_SERVER server,
T_SMR_SUBJECT subject,
T_BOOL subscribe_flag
));
T_SMR_API T_CB T_ENTRY T_EXPORT TsmrServerSubscribeCbLookup T_PROTO((
T_SMR smr,
T_SMR_SERVER server,
T_SMR_SERVER_SUBSCRIBE_CB_FUNC func,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrServerGroupUpdateFirstHops T_PROTO((
T_SMR smr,
T_BOOL purge_unreachable_servers
));
T_SMR_API T_SMR_SERVER T_ENTRY T_EXPORT TsmrServerCreateDirect T_PROTO((
T_SMR smr,
T_SMR_IO_DIRECTOR iod,
T_SM_CREDENTIALS credentials,
T_SRV_CHANNEL_INFO chinfo
));
T_SMR_API T_SMR_SERVER T_ENTRY T_EXPORT TsmrServerLookupDirect T_PROTO((
T_SMR smr,
T_STR name
));
T_SMR_API T_PTR T_ENTRY T_EXPORT TsmrServerTraverse T_PROTO((
T_SMR smr,
T_SMR_SERVER_TRAV_FUNC func,
T_PTR arg
));
T_SMR_API T_SMR_SERVER T_ENTRY T_EXPORT TsmrServerCreateIndirect T_PROTO((
T_SMR smr,
T_STR name,
T_STR node,
T_STR user,
T_INT4 pid,
T_STR arch,
T_STR ident,
T_INT2 protocol_version,
T_PTR_ARY conn_names
));
T_SMR_API T_SMR_SERVER T_ENTRY T_EXPORT TsmrServerLookupIndirect T_PROTO((
T_SMR smr,
T_STR name
));
T_SMR_API T_SMR_SERVER T_ENTRY T_EXPORT TsmrServerLookup T_PROTO((
T_SMR smr,
T_STR name
));
T_SMR_API T_INT4 T_ENTRY T_EXPORT TsmrServerGetServerCount T_PROTO((
T_SMR smr
));
T_SMR_API T_INT4 T_ENTRY T_EXPORT TsmrServerGetServerDirectCount T_PROTO((
T_SMR smr
));
T_SMR_API T_INT4 T_ENTRY T_EXPORT TsmrServerGetServerDirectAcceptCount T_PROTO((
T_SMR smr
));
T_SMR_API T_INT4 T_ENTRY T_EXPORT TsmrServerGetServerDirectConnectCount T_PROTO((
T_SMR smr
));
T_SMR_API T_INT4 T_ENTRY T_EXPORT TsmrServerGetServerIndirectCount T_PROTO((
T_SMR smr
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerDestroy T_PROTO((
T_SMR_SERVER server,
T_CSTR conn_activity
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerCheckUnique T_PROTO((
T_SMR smr,
T_STR name,
T_STR node,
T_STR user,
T_INT4 pid,
T_BOOL direct
));

/* smrdbg.c */
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrGroupCreate T_PROTO((
T_SMR smr,
T_SRV_CHANNEL_INFO chinfo,
T_SMR_IO_DIRECTOR iod,
T_SMR_GROUP * return_group
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrGroupSetThreshold T_PROTO((
T_SMR_GROUP group,
T_INT4 threshold
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrGroupPreopenMemberCreate T_PROTO((
T_SMR_GROUP group,
T_INT4 mid,
T_STR ident,
T_STR usid,
T_STR node,
T_STR addr,
T_STR user,
T_STR arch,
T_INT2 version,
T_INT4 pid,
T_SMR_GROUP_PREOPEN_MEMBER * member
));
T_SMR_API T_SMR_GROUP_PREOPEN_MEMBER T_ENTRY T_EXPORT TsmrGroupPreopenMemberLookup T_PROTO((
T_SMR_GROUP group,
T_INT4 mid
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrGroupPreopenMemberDestroy T_PROTO((
T_SMR_GROUP group,
T_INT4 mid
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrGroupMemberClientAdd T_PROTO((
T_SMR_GROUP group,
T_INT4 mid,
T_SMR_CLIENT client
));
T_SMR_API T_SMR_CLIENT T_ENTRY T_EXPORT TsmrGroupMemberClientLookup T_PROTO((
T_SMR_GROUP group,
T_INT4 mid
));
T_SMR_API T_SMR_CLIENT T_ENTRY T_EXPORT TsmrGroupMemberClientRemove T_PROTO((
T_SMR_GROUP group,
T_INT4 mid
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrGroupMemberExists T_PROTO((
T_SMR_GROUP group,
T_INT4 mid
));
T_SMR_API T_SMR_GROUP T_ENTRY T_EXPORT TsmrGroupLookup T_PROTO((
T_SMR smr,
T_INT4 * id
));
T_SMR_API T_SMR_GROUP T_ENTRY T_EXPORT TsmrGroupLookupByName T_PROTO((
T_SMR smr,
T_STR name
));
T_SMR_API T_CB T_ENTRY T_EXPORT TsmrGroupCreateCbCreate T_PROTO((
T_SMR_GROUP_CREATE_CB_FUNC func,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrGroupCreateCbCall T_PROTO((
T_SMR_GROUP group
));
T_SMR_API T_CB T_ENTRY T_EXPORT TsmrGroupCreateCbLookup T_PROTO((
T_SMR_GROUP_CREATE_CB_FUNC func,
T_CB_ARG arg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrGroupDestroy T_PROTO((
T_SMR_GROUP group
));

/* smrdbsub.c */
T_SMR_API T_CB T_ENTRY T_EXPORT TsmrSubjectCreateCbCreate T_PROTO((
T_SMR_PROJECT app,
T_SMR_SUBJECT_CREATE_CB_FUNC func,
T_CB_ARG arg
));
T_SMR_API T_CB T_ENTRY T_EXPORT TsmrSubjectCreateCbLookup T_PROTO((
T_SMR_PROJECT app,
T_SMR_SUBJECT_CREATE_CB_FUNC func,
T_CB_ARG arg
));
T_SMR_API T_CB T_ENTRY T_EXPORT TsmrSubjectDestroyCbCreate T_PROTO((
T_SMR_PROJECT app,
T_SMR_SUBJECT dg,
T_SMR_SUBJECT_DESTROY_CB_FUNC func,
T_CB_ARG arg
));
T_SMR_API T_CB T_ENTRY T_EXPORT TsmrSubjectDestroyCbLookup T_PROTO((
T_SMR_PROJECT app,
T_SMR_SUBJECT dg,
T_SMR_SUBJECT_DESTROY_CB_FUNC func,
T_CB_ARG arg
));
T_SMR_API T_CB T_ENTRY T_EXPORT TsmrSubjectSubscribeCbCreate T_PROTO((
T_SMR_PROJECT app,
T_SMR_SUBJECT dg,
T_SMR_SUBJECT_SUBSCRIBE_CB_FUNC func,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrSubjectSubscribeCbCall T_PROTO((
T_SMR_SUBJECT dg,
T_SMR_CLIENT client,
T_BOOL recv_flag
));
T_SMR_API T_CB T_ENTRY T_EXPORT TsmrSubjectSubscribeCbLookup T_PROTO((
T_SMR_PROJECT app,
T_SMR_SUBJECT dg,
T_SMR_SUBJECT_SUBSCRIBE_CB_FUNC func,
T_CB_ARG arg
));
T_SMR_API T_SMR_SUBJECT T_ENTRY T_EXPORT TsmrSubjectCreate T_PROTO((
T_SMR_PROJECT app,
T_STR name
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrSubjectGetName T_PROTO((
T_SMR_SUBJECT dg,
T_STR * name_return
));
T_SMR_API T_INT4 T_ENTRY T_EXPORT TsmrSubjectGetServerSize T_PROTO((
T_SMR_SUBJECT dg
));
T_SMR_API T_INT4 T_ENTRY T_EXPORT TsmrSubjectGetDirectClientSize T_PROTO((
T_SMR_SUBJECT dg
));
T_SMR_API T_INT4 T_ENTRY T_EXPORT TsmrSubjectGetWarmClientSize T_PROTO((
T_SMR_SUBJECT dg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrSubjectGetProject T_PROTO((
T_SMR_SUBJECT dg,
T_SMR_PROJECT * app_return
));
T_SMR_API T_SMR_SUBJECT T_ENTRY T_EXPORT TsmrSubjectLookup T_PROTO((
T_SMR_PROJECT app,
T_STR name
));
T_SMR_API T_PTR T_ENTRY T_EXPORT TsmrSubjectTraverse T_PROTO((
T_SMR_PROJECT app,
T_SMR_SUBJECT_TRAV_FUNC func,
T_PTR arg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrSubjectDestroy T_PROTO((
T_SMR_SUBJECT dg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrSubjectFreeDestroy T_PROTO((
T_SMR_SUBJECT_LIST dglistent,
T_SMR_SUBJECT dgfree
));

/* smrdbcmd.c */
T_SMR_API void T_ENTRY T_EXPORT TsmrCommandInit T_PROTO((void));

/* smrdbmon.c */
T_SMR_API T_STR T_ENTRY T_EXPORT TsmrCreateServerCongestionWatchKey T_PROTO((
T_STR client_name,
T_STR server_name,
T_STR connected_process_name
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbMonServerCongestionWatchServerCreate T_PROTO((
T_SMR_SERVER server,
T_SMR_SERVER_CREATE_CB_DATA data,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbMonServerCongestionWatchGroupCreate T_PROTO((
T_SMR_GROUP group,
T_SMR_GROUP_CREATE_CB_DATA data,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbMonServerCongestionWatchClientCreate T_PROTO((
T_SMR_CLIENT client,
T_SMR_CLIENT_CREATE_CB_DATA data,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbMonClientNamesClientCreateRemote T_PROTO((
T_SMR_CLIENT client,
T_SMR_CLIENT_CREATE_CB_DATA data,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbMonClientNamesClientDestroyRemote T_PROTO((
T_SMR_CLIENT client,
T_SMR_CLIENT_DESTROY_CB_DATA data,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbMonClientNamesCleanup T_PROTO((
T_SMR_SERVER server,
T_SMR_SERVER_DESTROY_CB_DATA data,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbMonMaxClientLicenses T_PROTO((
T_SMR smr,
T_SMR_SERVER_MAX_CLIENT_LICENSES_CB_DATA data,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbMonSubjectNamesSubjectSubscribeRemote T_PROTO((
T_SMR_SUBJECT subject,
T_SMR_SUBJECT_SUBSCRIBE_CB_DATA data,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbMonSubjectNamesSubjectCreateRemote T_PROTO((
T_SMR_SUBJECT subject,
T_SMR_SUBJECT_CREATE_CB_DATA data,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbMonSubjectNamesSubjectDestroyRemote T_PROTO((
T_SMR_SUBJECT subject,
T_SMR_SUBJECT_DESTROY_CB_DATA data,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbMonSubjectNamesCleanup T_PROTO((
T_SMR_SERVER server,
T_SMR_SERVER_DESTROY_CB_DATA data,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbMonSubjectSubscribeSubjectSubscribeRemote T_PROTO((
T_SMR_SUBJECT subject,
T_SMR_SUBJECT_SUBSCRIBE_CB_DATA data,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbMonSubjectSubscribeCleanup T_PROTO((
T_SMR_SERVER server,
T_SMR_SERVER_DESTROY_CB_DATA data,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbMonClientSubscribeClientSubscribeRemote T_PROTO((
T_SMR_CLIENT client,
T_SMR_CLIENT_SUBSCRIBE_CB_DATA data,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbMonClientSubscribeCleanup T_PROTO((
T_SMR_SERVER server,
T_SMR_SERVER_DESTROY_CB_DATA data,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbMonClientCreateRemote T_PROTO((
T_SMR_CLIENT client,
T_SMR_CLIENT_CREATE_CB_DATA data,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbMonClientTimeCleanup T_PROTO((
T_SMR_SERVER server,
T_SMR_SERVER_DESTROY_CB_DATA data,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbMonClientBufferCleanup T_PROTO((
T_SMR_SERVER server,
T_SMR_SERVER_DESTROY_CB_DATA data,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbMonClientCongestionCleanup T_PROTO((
T_SMR_SERVER server,
T_SMR_SERVER_DESTROY_CB_DATA data,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbMonServerCongestionCleanup T_PROTO((
T_SMR_SERVER server,
T_SMR_SERVER_DESTROY_CB_DATA data,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbMonMaxClientLicensesCleanup T_PROTO((
T_SMR_SERVER server,
T_SMR_SERVER_DESTROY_CB_DATA data,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbMonClientMsgRecvCleanup T_PROTO((
T_SMR_SERVER server,
T_SMR_SERVER_DESTROY_CB_DATA data,
T_CB_ARG arg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbMonClientMsgSendCleanup T_PROTO((
T_SMR_SERVER server,
T_SMR_SERVER_DESTROY_CB_DATA data,
T_CB_ARG arg
));
T_SMR_API T_PTR T_ENTRY T_EXPORT TsmrMonSubjectNamesSubjectTableTf T_PROTO((
T_SUBJECT_TABLE_TRAV_STATUS trav_status,
T_PTR value,
T_PTR arg
));
T_SMR_API T_PTR T_ENTRY T_EXPORT TsmrMonSubjectSubscribeSubjectTableTf T_PROTO((
T_SUBJECT_TABLE_TRAV_STATUS trav_status,
T_PTR value,
T_PTR arg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonPrimeSubjectSubscribeStatus T_PROTO((
T_SMR smr,
T_STR subject_name,
T_MSG set_watch_msg,
T_SMR_PROJECT project,
T_SMR_CLIENT_MON_WATCH client_mon_watch,
T_SMR_SERVER_MON_WATCH server_mon_watch
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonProjectNamesGetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_BOOL * watch_status_return
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonProjectNamesSetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_BOOL watch_status
));
T_SMR_API void T_ENTRY T_EXPORT TsmrMonSendRoutedSetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT_MON_WATCH mon_watch
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonBuildClientNamesMsg T_PROTO((
T_SMR smr,
T_MSG msg,
T_SMR_PROJECT project,
T_STR * scope_list,
T_INT4 num_scopes,
T_STR created_client,
T_STR destroyed_client,
T_SMR_CLIENT client
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonSendClientNamesStatus T_PROTO((
T_SMR smr,
T_SMR_CLIENT_MON_WATCH mon_watch
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonClientNamesGetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_BOOL * watch_status_return
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonClientNamesSetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_BOOL watch_status,
T_MSG set_watch_msg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonBuildSubjectNamesMsg T_PROTO((
T_SMR smr,
T_MSG msg,
T_SMR_PROJECT project,
T_STR * scope_list,
T_INT4 num_scopes,
T_STR created_subject,
T_STR destroyed_subject
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonSendSubjectNamesStatus T_PROTO((
T_SMR smr,
T_SMR_CLIENT_MON_WATCH mon_watch
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonSubjectNamesGetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_BOOL * watch_status_return
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonSubjectNamesSetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_BOOL watch_status,
T_MSG set_watch_msg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonSubjectSubscribeSetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_STR subject_name,
T_BOOL watch_status,
T_MSG set_watch_msg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonClientMsgSendGetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_STR client_name,
T_STR msg_type_name,
T_BOOL * watch_status_return
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonSendClientMsgSendSetWatch T_PROTO((
T_SMR smr,
T_SMR_PROJECT project,
T_MSG set_watch_msg,
T_STR * scope_list,
T_INT4 num_scopes
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonClientMsgSendSetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_STR client_name,
T_STR msg_type_name,
T_BOOL watch_status,
T_MSG set_watch_msg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrMonMsgAppendServerNames T_PROTO((
T_SMR smr,
T_MSG msg,
T_STR * scope_list,
T_INT4 num_scopes
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonServerNamesGetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_BOOL * watch_status_return
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonServerNamesSetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_BOOL watch_status,
T_MSG set_watch_msg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonSubjectSubscribeGetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_STR client_name,
T_BOOL * watch_status_return
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonSendSubjectSubscribeStatus T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_STR subject_name,
T_HASH_TABLE client_table,
T_STR start_client,
T_STR stop_client
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonClientSubscribeGetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_STR client_name,
T_BOOL * watch_status_return
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonPrimeClientSubscribeStatus T_PROTO((
T_SMR smr,
T_STR client_name,
T_MSG set_watch_msg,
T_SMR_PROJECT project,
T_SMR_CLIENT_MON_WATCH client_mon_watch,
T_SMR_SERVER_MON_WATCH server_mon_watch
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonClientSubscribeSetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_STR client_name,
T_BOOL watch_status,
T_MSG set_watch_msg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonClientTimeGetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_STR client_name,
T_BOOL * watch_status_return
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonSendClientTimeSetWatch T_PROTO((
T_SMR smr,
T_SMR_PROJECT project,
T_MSG set_watch_msg,
T_STR * scope_list,
T_INT4 num_scopes
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonClientTimeSetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_STR client_name,
T_BOOL watch_status,
T_MSG set_watch_msg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonClientBufferGetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_STR client_name,
T_BOOL * watch_status_return
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonSendClientBufferSetWatch T_PROTO((
T_SMR smr,
T_SMR_PROJECT project,
T_MSG set_watch_msg,
T_STR * scope_list,
T_INT4 num_scopes
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonClientBufferSetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_STR client_name,
T_BOOL watch_status,
T_MSG set_watch_msg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonClientMsgRecvGetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_STR client_name,
T_STR msg_type_name,
T_BOOL * watch_status_return
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonSendClientMsgRecvSetWatch T_PROTO((
T_SMR smr,
T_SMR_PROJECT project,
T_MSG set_watch_msg,
T_STR * scope_list,
T_INT4 num_scopes
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonClientMsgRecvSetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_STR client_name,
T_STR msg_type_name,
T_BOOL watch_status,
T_MSG set_watch_msg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrMonBuildServerConnMsg T_PROTO((
T_SMR smr,
T_MSG msg,
T_STR * scope_list,
T_INT4 num_scopes
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonServerConnGetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_BOOL * watch_status_return
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonServerConnSetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_BOOL watch_status,
T_MSG set_watch_msg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonMaxClientLicensesGetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_STR server_name,
T_BOOL * watch_status_return
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonMaxClientLicensesSetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_STR server_name,
T_BOOL watch_status,
T_MSG set_watch_msg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonClientCongestionGetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_STR client_name,
T_BOOL * current_watch_status
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonSendClientCongestionSetWatch T_PROTO((
T_SMR smr,
T_SMR_PROJECT project,
T_MSG set_watch_msg,
T_STR * scope_list,
T_INT4 num_scopes
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonClientCongestionSetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_STR client_name,
T_INT4 high_water,
T_INT4 low_water,
T_BOOL watch_status,
T_MSG set_watch_msg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonServerCongestionGetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_STR server_name,
T_STR connected_process_name,
T_BOOL * current_watch_status
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonServerCongestionSetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_STR server_name,
T_STR connected_process_name,
T_INT4 high_water,
T_INT4 low_water,
T_BOOL watch_status,
T_MSG set_watch_msg,
T_STR dying_client
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonSendServerCongestionIoctl T_PROTO((
T_SMR smr,
T_SMR_PROJECT project,
T_STR client_name,
T_STR server_name,
T_STR connected_process_name,
T_INT4 high_water,
T_INT4 low_water,
T_BOOL watch_status,
T_STR watch_key,
T_STR dying_local_client
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMonSendServerCongestionStatus T_PROTO((
T_SMR smr,
T_IOCTL_SERVER_CONGESTION_STATUS watch_status,
T_BOOL high_water
));
T_SMR_API T_STR T_ENTRY T_EXPORT TsmrGraphGetVertexString T_PROTO((
T_SMR smr,
T_GRAPH_VERTEX vertex
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrGraphDump T_PROTO((
T_SMR smr,
T_GRAPH graph,
T_OUT_FUNC out_func
));

/* smrdbx.c */
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrSubjectGmdPublishingServers T_PROTO((
T_SMR_SUBJECT subject,
T_PTR_ARY server_list
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbSubjectTableChange T_PROTO((
T_SUBJECT_TABLE table,
T_SUBJECT_TABLE_CHANGE_CB cb_data,
T_CB_ARG arg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrSubjectClientSetSubscribe T_PROTO((
T_STR subject_name,
T_SMR_CLIENT client,
T_BOOL recv_flag,
T_BOOL lb_on,
T_BOOL auth_flag
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrSubjectServerSetSubscribe T_PROTO((
T_SMR_SUBJECT dg,
T_SMR_CLIENT client,
T_BOOL recv_flag
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerSubjectSetSubscribe T_PROTO((
T_SMR_SERVER server,
T_SMR_PROJECT project,
T_STR subject_name,
T_BOOL recv_flag
));
T_SMR_API T_PTR T_ENTRY T_EXPORT TsmrSubjectTableServerMemberTf T_PROTO((
T_SUBJECT_TABLE_TRAV_STATUS trav_status,
T_PTR value,
T_PTR arg
));
T_SMR_API T_PTR T_ENTRY T_EXPORT TsmrSubjectTableServerListTf T_PROTO((
T_SUBJECT_TABLE_TRAV_STATUS trav_status,
T_PTR value,
T_PTR arg
));
T_SMR_API T_PTR T_ENTRY T_EXPORT TsmrSubjectTableServerTableTf T_PROTO((
T_SUBJECT_TABLE_TRAV_STATUS trav_status,
T_PTR value,
T_PTR arg
));

/* smrmh.c */
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrCbMonServerGeneralPollResult T_PROTO((
T_SMR smr,
T_SMR_MSG_HANDLER_DATA data,
T_MSG * return_msg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrCbMonServerTimePollResult T_PROTO((
T_SMR smr,
T_SMR_MSG_HANDLER_DATA data,
T_MSG * return_msg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrCbMonServerStartTimePollResult T_PROTO((
T_SMR smr,
T_SMR_MSG_HANDLER_DATA data,
T_MSG * return_msg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrCbMonServerVersionPollResult T_PROTO((
T_SMR smr,
T_SMR_MSG_HANDLER_DATA data,
T_MSG * return_msg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrCbMonServerCpuPollResult T_PROTO((
T_SMR smr,
T_SMR_MSG_HANDLER_DATA data,
T_MSG * return_msg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrCbMonServerBufferPollResult T_PROTO((
T_SMR smr,
T_SMR_MSG_HANDLER_DATA data,
T_MSG * return_msg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrCbMonServerOptionPollResult T_PROTO((
T_SMR smr,
T_SMR_MSG_HANDLER_DATA data,
T_MSG * return_msg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrCbMonServerRoutePollResult T_PROTO((
T_SMR smr,
T_SMR_MSG_HANDLER_DATA data,
T_MSG * return_msg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrCbMonServerMsgTrafficPollResult T_PROTO((
T_SMR smr,
T_SMR_MSG_HANDLER_DATA data,
T_MSG * return_msg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrCbMonServerMsgTrafficExPollResult T_PROTO((
T_SMR smr,
T_SMR_MSG_HANDLER_DATA data,
T_MSG * return_msg
));
T_SMR_API T_MSG T_ENTRY T_EXPORT TsmrCbMonClientNamesPollResult T_PROTO((
T_SMR smr,
T_MSG msg
));
T_SMR_API T_MSG T_ENTRY T_EXPORT TsmrCbMonClientNamesNumPollResult T_PROTO((
T_SMR smr,
T_MSG msg
));
T_SMR_API T_MSG T_ENTRY T_EXPORT TsmrCbMonSubjectNamesPollResult T_PROTO((
T_SMR smr,
T_MSG msg
));
T_SMR_API T_MSG T_ENTRY T_EXPORT TsmrCbMonSubjectSubscribePollResult T_PROTO((
T_SMR smr,
T_MSG msg
));
T_SMR_API T_MSG T_ENTRY T_EXPORT TsmrCbMonClientSubscribePollResult T_PROTO((
T_SMR smr,
T_MSG msg
));
T_SMR_API T_MSG T_ENTRY T_EXPORT TsmrCbMonClientSubscribeNumPollResult T_PROTO((
T_SMR smr,
T_MSG msg
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrCbMonClientPollCall T_PROTO((
T_SMR smr,
T_SMR_MSG_HANDLER_DATA data,
T_PTR_ARY clients
));

/* smrcmh1.c */
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientGmdDelete T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientGmdStatusCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientGmdInitCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));

/* smrcmh2.c */
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientSubjectSetSubscribe T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientBatchSubjectSetSubscribe T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));

/* smrcmh3.c */
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerSendAckDestroyCollectivePoll T_PROTO((
T_SMR smr,
T_SMR_SERVER_SEND_ACK send_ack
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonClientNamesSetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonServerNamesSetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonMaxClientLicensesSetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonSubjectNamesSetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonSubjectSubscribeSetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonClientSubscribeSetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonClientTimeSetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonClientCongestionSetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonServerCongestionSetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonClientBufferSetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonClientMsgRecvSetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonClientMsgSendSetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonServerConnSetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonProjectNamesPollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonClientGeneralPollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonClientInfoPollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonClientExtPollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonClientTimePollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonClientCpuPollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonClientBufferPollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonClientOptionPollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonClientMsgTypePollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonClientMsgTypeExPollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonClientCbPollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonClientMsgTrafficPollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonClientSubjectPollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonClientSubjectExPollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonServerNamesPollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonServerGeneralPollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonServerTimePollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonServerStartTimePollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonServerCpuPollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonServerBufferPollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonServerOptionPollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonServerConnPollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonServerRoutePollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonServerMsgTrafficPollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonServerMsgTrafficExPollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonClientNamesPollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonClientNamesNumPollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonSubjectNamesPollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonSubjectSubscribePollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonClientSubscribePollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonClientSubscribeNumPollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonProjectNamesSetWatch T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));

/* smrcmh4.c */
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientControl T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientServerStopCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientDisconnect T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));

/* smrcmh5.c */
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientAdminSetOutboundRateParams T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));

/* smrsmh1.c */
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerGmdAck T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerSrvGmdInit T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerSrvGmdClientSubjectSetSubscribe T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerSrvGmdClientStatus T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerSrvGmdSuspend T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerSrvGmdResume T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerSrvGmdDeleteInit T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServer65SrvGmdInitResult T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServer65SrvGmdInitAddResult T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServer65SrvGmdInitDeleteResult T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));

/* smrsmh2.c */
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerServerSubjectSetSubscribe T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServer67UniqueSubjectCheckCall T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerUniqueSubjectCheckCall T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerUniqueSubjectCheckResult T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));

/* smrsmh3.c */
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerMonClientNamesSetWatch T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerMonClientNamesStatus T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerMonSubjectNamesSetWatch T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerMonSubjectNamesStatus T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerMonSubjectSubscribeSetWatch T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerMonSubjectSubscribeStatus T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerMonClientSubscribeSetWatch T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerMonClientSubscribeStatus T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerMonServerCongestionStatus T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerMonMaxClientLicensesStatus T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerMonClientTimeSetWatch T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerMonClientCongestionSetWatch T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerMonMaxClientLicensesSetWatch T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerMonServerCongestionSetWatch T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerMonClientBufferSetWatch T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerMonClientMsgRecvSetWatch T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerMonClientMsgSendSetWatch T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerMonCollectivePollCall T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerMonCollectivePollResult T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerMonClientPollCall T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerMonServerGeneralPollCall T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerMonServerTimePollCall T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerMonServerStartTimePollCall T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerMonServerCpuPollCall T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerMonServerVersionPollCall T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerMonServerBufferPollCall T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerMonServerOptionPollCall T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerMonServerRoutePollCall T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerMonServerMsgTrafficPollCall T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerMonServerMsgTrafficExPollCall T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonClientVersionPollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbClientMonServerVersionPollCall T_PROTO((
T_SMR smr,
T_SMR_CLIENT client,
T_SMR_MSG_HANDLER_DATA data
));

/* smrsmh4.c */
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerControl T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerStopCall T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerTEDCall T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));

/* smrsgmp.c */
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerPrimeOnIODOpen T_PROTO((
T_SMR smr,
T_SRV_CHANNEL_INFO chinfo,
T_SMR_IO_DIRECTOR iod
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerPrimeOnMsgQRead T_PROTO((
T_SMR smr,
T_SMR_IO_DIRECTOR iod,
T_SIOC_MSG_IQ iq
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerPrimeOnIODClose T_PROTO((
T_SMR smr,
T_SMR_IO_DIRECTOR iod
));
T_SMR_API void T_ENTRY T_EXPORT TsmrServerPrimeCheckAbort T_PROTO((
T_SMR smr
));

/* smrsgm.c */
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerSetOutboundRateParams T_PROTO((
T_SMR_SERVER server,
T_INT4 token_rate,
T_INT4 max_tokens,
T_REAL8 burst_interval
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerPrime T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerServerCreate T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerConnCreate T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbServerConnDestroy T_PROTO((
T_SMR smr,
T_SMR_SERVER direct_server,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerGroupServerCreate T_PROTO((
T_SMR smr,
T_SMR_SERVER server
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerGroupConnCreate T_PROTO((
T_SMR smr,
T_SMR_SERVER server
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerGroupConnDestroy T_PROTO((
T_SMR smr,
T_STR conn_name,
T_STR conn_unique_subject,
T_CSTR conn_activity
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerGmdAck T_PROTO((
T_SMR smr,
T_SMR_SERVER server,
T_INT4 seq_num
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerDirectAllMsgSend T_PROTO((
T_SMR smr,
T_MSG msg,
T_SMR_SERVER server_to_skip
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerOnOpen T_PROTO((
T_SMR smr,
T_MSG prime_msg,
T_MSG eoi_msg,
T_SRV_CHANNEL_INFO chinfo,
T_SMR_IO_DIRECTOR iod
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerOnMsgQRead T_PROTO((
T_SMR smr,
T_SMR_IO_DIRECTOR iod,
T_SIOC_MSG_IQ iq
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerOnIoctl T_PROTO((
T_SMR smr,
T_SMR_IO_DIRECTOR iod,
T_SIOC_IOCTL ioctl
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerOnIODClose T_PROTO((
T_SMR smr,
T_SMR_IO_DIRECTOR iod
));

/* smrcgmp.c */
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerSendAckDestroyUniqueSubjectCheck T_PROTO((
T_SMR smr,
T_SMR_SERVER_SEND_ACK send_ack
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientPrimeStart T_PROTO((
T_SMR smr,
T_SMR_IO_DIRECTOR iod,
T_SMR_GROUP group,
T_STR ident,
T_STR usid,
T_STR node,
T_STR addr,
T_INT4 pid,
T_STR user,
T_STR arch,
T_INT2 version,
T_INT4 mid,
T_STR project,
T_STR dsp,
T_INT2 disconnect_mode,
T_INT4 num_subjects,
T_STR * subject_list,
T_INT4 * lb_list,
T_INT4 cap,
T_INT2 connect_version,
T_PROPERTIES properties,
T_SM_CREDENTIALS credentials,
T_BOOL flg_chk_preopen
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientPrimeStop T_PROTO((
T_SMR smr,
T_SMR_GROUP group,
T_INT4 mid
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientPrimeOnIODOpen T_PROTO((
T_SMR smr,
T_SRV_CHANNEL_INFO chinfo,
T_SMR_IO_DIRECTOR iod
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientPrimeOnMsgQRead T_PROTO((
T_SMR smr,
T_SMR_IO_DIRECTOR iod,
T_SIOC_MSG_IQ iq
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientPrimeOnIODClose T_PROTO((
T_SMR smr,
T_SMR_IO_DIRECTOR iod
));

/* smrcgm.c */
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientSetOutboundRateParams T_PROTO((
T_SMR_CLIENT client,
T_INT4 token_rate,
T_INT4 max_tokens,
T_REAL8 burst_interval
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientSendGmdAck T_PROTO((
T_SMR_CLIENT client,
T_INT4 seq_num
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientSendGmdNack T_PROTO((
T_SMR_CLIENT client,
T_INT4 seq_num,
T_STR failed_proc_name,
T_INT4 err_num
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientOnOpen T_PROTO((
T_SMR_CLIENT client
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientOnMsgQRead T_PROTO((
T_SMR smr,
T_SMR_IO_DIRECTOR iod,
T_SIOC_MSG_IQ iq
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientOnIoctl T_PROTO((
T_SMR smr,
T_SMR_IO_DIRECTOR iod,
T_SIOC_IOCTL ioctl
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrClientOnIODClose T_PROTO((
T_SMR smr,
T_SMR_IO_DIRECTOR iod
));

/* smrmcgm.c */
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrGroupSetOutboundRateParams T_PROTO((
T_SMR_GROUP group,
T_INT4 token_rate,
T_INT4 max_tokens,
T_REAL8 burst_interval
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbGroupMemberUp T_PROTO((
T_SMR smr,
T_SMR_GROUP group,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbGroupSetThreshold T_PROTO((
T_SMR smr,
T_SMR_GROUP group,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbGroupMemberOpenCall T_PROTO((
T_SMR smr,
T_SMR_GROUP group,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbGroupMemberDown T_PROTO((
T_SMR smr,
T_SMR_GROUP group,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API void T_ENTRY T_EXPORT TsmrCbGroupDown T_PROTO((
T_SMR smr,
T_SMR_GROUP group,
T_SMR_MSG_HANDLER_DATA data
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMCGMOnIODOpen T_PROTO((
T_SMR smr,
T_SRV_CHANNEL_INFO chinfo,
T_SMR_IO_DIRECTOR iod
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMCGMOnMsgQRead T_PROTO((
T_SMR smr,
T_SMR_IO_DIRECTOR iod,
T_SIOC_MSG_IQ iq
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMCGMOnIoctl T_PROTO((
T_SMR smr,
T_SMR_IO_DIRECTOR iod,
T_SIOC_IOCTL ioctl
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrMCGMOnIODClose T_PROTO((
T_SMR smr,
T_SMR_IO_DIRECTOR iod
));

/* smrted.c */
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerTEDGraphsEqual T_PROTO((
T_SMR_TOPOLOGY_EXPLORER_DATA a,
T_SMR_TOPOLOGY_EXPLORER_DATA b
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerTEDVisited T_PROTO((
T_SMR_TOPOLOGY_EXPLORER_DATA ted,
T_STR name
));
T_SMR_API void T_ENTRY T_EXPORT TsmrServerTEDFree T_PROTO((
T_SMR_TOPOLOGY_EXPLORER_DATA ted
));
T_SMR_API T_SMR_TOPOLOGY_EXPLORER_DATA T_ENTRY T_EXPORT TsmrServerTEDCreate T_PROTO((
T_SMR smr
));
T_SMR_API void T_ENTRY T_EXPORT TsmrServerTEDCheckGhosts T_PROTO((
T_SMR smr,
T_SMR_TOPOLOGY_EXPLORER_DATA ted
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerTEDSetVisited T_PROTO((
T_SMR_TOPOLOGY_EXPLORER_DATA ted,
T_STR node
));
T_SMR_API T_BOOL T_ENTRY T_EXPORT TsmrServerTEDAddParent T_PROTO((
T_SMR_TOPOLOGY_EXPLORER_DATA ted,
T_STR node
));
T_SMR_API T_STR T_ENTRY T_EXPORT TsmrServerTEDRemoveParent T_PROTO((
T_SMR_TOPOLOGY_EXPLORER_DATA ted
));
T_SMR_API T_IPC_MSG T_ENTRY T_EXPORT TsmrServerTEDToMessage T_PROTO((
T_SMR_TOPOLOGY_EXPLORER_DATA ted
));
T_SMR_API T_SMR_TOPOLOGY_EXPLORER_DATA T_ENTRY T_EXPORT TsmrServerMsgToTED T_PROTO((
T_IPC_MSG msg
));
T_SMR_API void T_ENTRY T_EXPORT TsmrServerTEDProcess T_PROTO((
T_SMR smr,
T_SMR_TOPOLOGY_EXPLORER_DATA ted
));

#ifdef __cplusplus
}
#endif
