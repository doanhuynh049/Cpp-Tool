/*
 * Copyright (c) 1991-2006 TIBCO Software Inc.
 * All rights reserved.
 * For more information, please contact:
 * TIBCO Software Inc., Palo Alto, California, USA
 *
 * $Id: //dev/packages/tsi/sm/dev/68/src/rtworks/smpr.h#1 $
 */

/* This file is generated by cproto - do not edit! */

/* ../rtworks/smpr.h -- generated prototypes */

#ifndef T_SM_API
# ifndef T_OS_WIN32
# define T_SM_API
# else
# ifndef T_STATIC_LINK
# ifndef T_SM_SOURCE
# if !defined T_GENERATE_PROTOTYPES
# define T_SM_API __declspec(dllimport)
# else
# define T_SM_API
# endif
# else
# if !defined T_GENERATE_PROTOTYPES
# define T_SM_API __declspec(dllexport)
# else
# define T_SM_API
# endif
# endif
# else
# define T_SM_API
# endif /* T_STATIC_LINK */
# endif /* T_OS_WIN32 */
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* sm.c */
T_SM_API T_BOOL T_ENTRY T_EXPORT TsmCreate T_PROTO((
T_SM * sm
));
T_SM_API T_BOOL T_ENTRY T_EXPORT TsmOpen T_PROTO((
T_SM sm,
T_STR auth_policy
));
T_SM_API T_BOOL T_ENTRY T_EXPORT TsmAuthenticate T_PROTO((
T_SM sm,
T_SM_CREDENTIALS credentials
));
T_SM_API T_BOOL T_ENTRY T_EXPORT TsmAuthenticateEx T_PROTO((
T_SM sm,
T_SM_CREDENTIALS credentials,
T_EDM edm,
T_SM_AUTHENTICATE_COMPLETION_FUNC completion_func,
T_PTR completion_arg
));
T_SM_API T_BOOL T_ENTRY T_EXPORT TsmAuthorize T_PROTO((
T_SM sm,
T_INT4 num_resources,
T_SM_RESOURCE * resource_arr,
T_INT4 * raid_arr,
T_SM_CREDENTIALS credentials,
T_INT4 * result_arr
));
T_SM_API T_BOOL T_ENTRY T_EXPORT TsmAuthorizeEx T_PROTO((
T_SM sm,
T_INT4 num_resources,
T_SM_RESOURCE * resource_arr,
T_INT4 * raid_arr,
T_SM_CREDENTIALS credentials,
T_INT4 * result_arr,
T_EDM edm,
T_SM_AUTHORIZE_COMPLETION_FUNC completion_func,
T_PTR completion_arg
));
T_SM_API T_BOOL T_ENTRY T_EXPORT TsmClose T_PROTO((
T_SM sm
));
T_SM_API T_BOOL T_ENTRY T_EXPORT TsmDestroy T_PROTO((
T_SM * sm
));
T_SM_API T_BOOL T_ENTRY T_EXPORT TsmChallenge T_PROTO((
T_PTR in_value,
T_INT4 in_value_len,
T_PTR out_value,
T_INT4 * out_value_len
));
T_SM_API T_BOOL T_ENTRY T_EXPORT TsmInit T_PROTO((void));
T_SM_API T_BOOL T_ENTRY T_EXPORT TsmInitThreads T_PROTO((void));

/* smd.c */
T_SM_API T_BOOL T_ENTRY T_EXPORT TsmDriverInit T_PROTO((void));
T_SM_API T_BOOL T_ENTRY T_EXPORT TsmDriverCreate T_PROTO((
T_STR name,
T_SM_DRIVER_XF_CREATE_FUNC create_func,
T_SM_DRIVER_XF_AUTHENTICATE_FUNC authenticate_func,
T_SM_DRIVER_XF_AUTHORIZE_FUNC authorize_func,
T_SM_DRIVER_XF_DESTROY_FUNC destroy_func
));
T_SM_API T_BOOL T_ENTRY T_EXPORT TsmDriverLookup T_PROTO((
T_STR name,
T_SM_DRIVER * driver
));
T_SM_API T_BOOL T_ENTRY T_EXPORT TsmDriverDestroy T_PROTO((
T_SM_DRIVER * driver
));
T_SM_API T_BOOL T_ENTRY T_EXPORT TsmDriverDeviceCreate T_PROTO((
T_SM_DRIVER driver,
T_SM_DRIVER_DEVICE * device
));
T_SM_API T_BOOL T_ENTRY T_EXPORT TsmDriverDeviceAuthenticate T_PROTO((
T_SM_DRIVER_DEVICE device,
T_SM_CREDENTIALS credentials
));
T_SM_API T_BOOL T_ENTRY T_EXPORT TsmDriverDeviceAuthorize T_PROTO((
T_SM_DRIVER_DEVICE device,
T_INT4 num_resources,
T_SM_RESOURCE * resource_arr,
T_INT4 * raid_arr,
T_SM_CREDENTIALS credentials,
T_INT4 * result_arr
));
T_SM_API T_BOOL T_ENTRY T_EXPORT TsmDriverDeviceDestroy T_PROTO((
T_SM_DRIVER_DEVICE * device
));

/* smcred.c */
T_SM_API T_BOOL T_ENTRY T_EXPORT TsmCredentialsCreate T_PROTO((
T_INT4 api,
T_PTR data,
T_INT4 data_len,
T_SM_CREDENTIALS * credentials
));
T_SM_API T_BOOL T_ENTRY T_EXPORT TsmCredentialsCreateFromOption T_PROTO((
T_SM_CREDENTIALS * credentials
));
T_SM_API T_BOOL T_ENTRY T_EXPORT TsmCredentialsClone T_PROTO((
T_SM_CREDENTIALS in_credentials,
T_SM_CREDENTIALS * out_credentials
));
T_SM_API T_BOOL T_ENTRY T_EXPORT TsmCredentialsDestroy T_PROTO((
T_SM_CREDENTIALS * credentials
));

/* smcdata.c */
T_SM_API T_BOOL T_ENTRY T_EXPORT TsmAuthenticateCompletionDataCreate T_PROTO((
T_EDM edm,
T_SM_CREDENTIALS credentials,
T_SM_AUTHENTICATE_COMPLETION_FUNC completion_func,
T_PTR completion_arg,
T_SM_AUTHENTICATE_COMPLETION_DATA * cdata
));
T_SM_API T_BOOL T_ENTRY T_EXPORT TsmAuthenticateCompletionDataDestroy T_PROTO((
T_SM_AUTHENTICATE_COMPLETION_DATA * cdata
));
T_SM_API T_BOOL T_ENTRY T_EXPORT TsmAuthorizeCompletionDataCreate T_PROTO((
T_EDM edm,
T_INT4 num_resources,
T_SM_RESOURCE * resource_arr,
T_INT4 * raid_arr,
T_SM_CREDENTIALS credentials,
T_INT4 * result_arr,
T_SM_AUTHORIZE_COMPLETION_FUNC completion_func,
T_PTR completion_arg,
T_SM_AUTHORIZE_COMPLETION_DATA * cdata
));
T_SM_API T_BOOL T_ENTRY T_EXPORT TsmAuthorizeCompletionDataDestroy T_PROTO((
T_SM_AUTHORIZE_COMPLETION_DATA * cdata
));

#ifdef __cplusplus
}
#endif
