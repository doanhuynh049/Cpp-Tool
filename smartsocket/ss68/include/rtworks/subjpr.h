/*
 * Copyright (c) 1991-2006 TIBCO Software Inc.
 * All rights reserved.
 * For more information, please contact:
 * TIBCO Software Inc., Palo Alto, California, USA
 *
 * $Id: //dev/packages/tkrnl/dev/68/src/rtworks/subjpr.h#2 $
 */

/* This file is generated by cproto - do not edit! */

/* ../rtworks/subjpr.h -- generated prototypes */

#ifndef T_SUBJ_API
# ifndef T_OS_WIN32
# define T_SUBJ_API
# else
# ifndef T_STATIC_LINK
# ifndef T_SUBJ_SOURCE
# if !defined T_GENERATE_PROTOTYPES
# define T_SUBJ_API __declspec(dllimport)
# else
# define T_SUBJ_API
# endif
# else
# if !defined T_GENERATE_PROTOTYPES
# define T_SUBJ_API __declspec(dllexport)
# else
# define T_SUBJ_API
# endif
# endif
# else
# define T_SUBJ_API
# endif /* T_STATIC_LINK */
# endif /* T_OS_WIN32 */
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* subj.c */
T_SUBJ_API T_BOOL T_ENTRY T_EXPORT TsubjectInitThreads T_PROTO((void));
T_SUBJ_API T_BOOL T_ENTRY T_EXPORT TsubjectMatch T_PROTO((
T_STR subject1,
T_STR subject2,
T_BOOL * match_return
));
T_SUBJ_API T_STR T_ENTRY T_EXPORT TsubjectAddDefaultPrefix T_PROTO((
T_STR rel_subject,
T_SAFE_STR abs_subject_in_out
));
T_SUBJ_API T_STR T_ENTRY T_EXPORT TsubjectGetUnique T_PROTO((void));
T_SUBJ_API T_BOOL T_ENTRY T_EXPORT TsubjectMatchStringi T_PROTO((
T_STR name1,
T_STR name2
));
T_SUBJ_API T_CB T_ENTRY T_EXPORT TsubjectTableChangeCbCreate T_PROTO((
T_SUBJECT_TABLE table,
T_SUBJECT_TABLE_CHANGE_CB_FUNC func,
T_CB_ARG arg
));
T_SUBJ_API T_CB T_ENTRY T_EXPORT TsubjectTableChangeCbLookup T_PROTO((
T_SUBJECT_TABLE table,
T_SUBJECT_TABLE_CHANGE_CB_FUNC func,
T_CB_ARG arg
));
T_SUBJ_API T_BOOL T_ENTRY T_EXPORT TsubjectTableChangeCbDestroy T_PROTO((
T_SUBJECT_TABLE table,
T_SUBJECT_TABLE_CHANGE_CB_FUNC func,
T_CB_ARG arg
));
T_SUBJ_API T_SUBJECT_TABLE T_ENTRY T_EXPORT TsubjectTableCreateInternal T_PROTO((
T_INT4 wc_init_size,
T_INT4 ab_init_size
));
T_SUBJ_API T_SUBJECT_TABLE T_ENTRY T_EXPORT TsubjectTableCreate T_PROTO((
T_INT4 init_size
));
T_SUBJ_API void T_ENTRY T_EXPORT TsubjectTableResize T_PROTO((
T_SUBJECT_TABLE table,
T_INT4 size
));
T_SUBJ_API T_BOOL T_ENTRY T_EXPORT TsubjectElementInsert T_PROTO((
T_SUBJECT_TABLE table,
T_SUBJECT_ELEMENT element
));
T_SUBJ_API T_BOOL T_ENTRY T_EXPORT TsubjectTableInsert T_PROTO((
T_SUBJECT_TABLE table,
T_STR subject_name,
T_PTR value
));
T_SUBJ_API T_SUBJECT_ELEMENT T_ENTRY T_EXPORT TsubjectElementLookup T_PROTO((
T_SUBJECT_TABLE table,
T_STR subject_name,
T_STR * next_name
));
T_SUBJ_API T_PTR T_ENTRY T_EXPORT TsubjectTableLookup T_PROTO((
T_SUBJECT_TABLE table,
T_STR subject_name
));
T_SUBJ_API T_SUBJECT_ELEMENT T_ENTRY T_EXPORT TsubjectElementRemove T_PROTO((
T_SUBJECT_TABLE table,
T_STR subject_name
));
T_SUBJ_API T_PTR T_ENTRY T_EXPORT TsubjectTableDelete T_PROTO((
T_SUBJECT_TABLE table,
T_STR subject_name
));
T_SUBJ_API T_BOOL T_ENTRY T_EXPORT TsubjectTableDestroy T_PROTO((
T_SUBJECT_TABLE table,
T_SUBJECT_TABLE_DESTROY_FUNC destroy_func,
T_PTR destroy_arg
));
T_SUBJ_API T_PTR T_ENTRY T_EXPORT TsubjectTableTraverseInternal T_PROTO((
T_SUBJECT_TABLE table,
T_STR current_level,
T_SUBJECT_TABLE_TRAV trav_data
));
T_SUBJ_API T_PTR T_ENTRY T_EXPORT TsubjectTableTraverse T_PROTO((
T_SUBJECT_TABLE table,
T_STR traversal_space,
T_SUBJECT_TABLE_TRAVERSE_FUNC trav_func,
T_PTR trav_arg
));
T_SUBJ_API T_PTR T_ENTRY T_EXPORT TsubjectTableTraverseAll T_PROTO((
T_SUBJECT_TABLE table,
T_SUBJECT_TABLE_TRAVERSE_FUNC trav_func,
T_PTR trav_arg
));
T_SUBJ_API T_BOOL T_ENTRY T_EXPORT TsubjectTablePrint T_PROTO((
T_SUBJECT_TABLE table,
T_OUT_FUNC output_func
));
T_SUBJ_API T_INT4 T_ENTRY T_EXPORT TsubjectTableGetSize T_PROTO((
T_SUBJECT_TABLE table
));
T_SUBJ_API T_BOOL T_ENTRY T_EXPORT TsubjectValid T_PROTO((
T_STR subject
));
T_SUBJ_API T_BOOL T_ENTRY T_EXPORT TsubjectCover T_PROTO((
T_STR set,
T_STR subset,
T_BOOL * cover_return
));
T_SUBJ_API T_BOOL T_ENTRY T_EXPORT TsubjectCoverProper T_PROTO((
T_CSTR set,
T_CSTR subset,
T_BOOL * cover_return
));

#ifdef __cplusplus
}
#endif
